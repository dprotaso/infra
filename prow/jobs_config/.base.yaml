autogen_header: |
  # #######################################################################
  # ####                                                               ####
  # ####      THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.       ####
  # ####   USE "./hack/generate-configs.sh" TO REGENERATE THIS FILE.   ####
  # ####                                                               ####
  # #######################################################################

path_aliases:
  knative: knative.dev
  knative-extensions: knative.dev

node_selector:
  type: testing

cluster: prow-build

requirements: [gcp]
requirement_presets:
  nightly:
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: SIGN_IMAGES
        value: "true"
      - name: ATTEST_IMAGES
        value: "true"
    volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
    volumes:
      - name: nightly-account
        secret:
          items:
          - key: nightly.json
            path: service-account.json
          secretName: prow-google-credentials

  nightly-notary: # this preset is for knative projects that release binaries ONLY.
    podSpec:
      serviceAccountName: nightly
    env:
      - name: SIGN_IMAGES
        value: "true"
      - name: ATTEST_IMAGES
        value: "true"
    volumeMounts:
      - name: apple-notary-creds
        mountPath: /etc/notary
        readOnly: true
    volumes:
      - name: apple-notary-creds
        secret:
          items:
          - key: notary-api-key
            path: key.json
          - key: signing-certificate
            path: cert.p12
          - key: signing-certificate-password
            path: password
          secretName: apple-notary-creds

  release:
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: SIGN_IMAGES
        value: "true"
      - name: ATTEST_IMAGES
        value: "true"
    volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
    volumes:
      - name: hub-token
        secret:
          items:
          - key: hub_token
            path: token
          secretName: github-credentials
      - name: release-account
        secret:
          items:
          - key: release.json
            path: service-account.json
          secretName: prow-google-credentials

  release-notary: # this preset is for knative projects that release binaries ONLY.
    podSpec:
      serviceAccountName: release
    env:
      - name: SIGN_IMAGES
        value: "true"
      - name: ATTEST_IMAGES
        value: "true"
    volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: apple-notary-creds
        mountPath: /etc/notary
        readOnly: true
    volumes:
      - name: hub-token
        secret:
          items:
          - key: hub_token
            path: token
          secretName: github-credentials
      - name: apple-notary-creds
        secret:
          items:
          - key: notary-api-key
            path: key.json
          - key: signing-certificate
            path: cert.p12
          - key: signing-certificate-password
            path: password
          secretName: apple-notary-creds

  docker:
    env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
    volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
    volumes:
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  perf:
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
    volumeMounts:
      - name: influx-token-secret-volume
        mountPath: /etc/influx-token-secret-volume
        readOnly: true
      - name: influx-url-secret-volume
        mountPath: /etc/influx-url-secret-volume
        readOnly: true
    volumes:
      - name: influx-token-secret-volume
        secret:
          secretName: influx-token-secret
          defaultMode: 0600
      - name: influx-url-secret-volume
        secret:
          secretName: influx-url-secret
          defaultMode: 0600

  gcp:
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
    volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
    volumes:
      - name: test-account
        secret:
          items:
          - key: service-account-key.json
            path: service-account.json
          secretName: prow-google-credentials
